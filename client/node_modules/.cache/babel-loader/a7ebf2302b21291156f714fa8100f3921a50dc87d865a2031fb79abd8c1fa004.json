{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selva\\\\OneDrive\\\\Desktop\\\\New folder (2)\\\\client\\\\src\\\\components\\\\ChangePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChangePassword() {\n  _s();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams(); // Extract `id` from the URL\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Password confirmation check\n    if (newPassword !== confirmPassword) {\n      setErrorMessage(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await axios.put(`http://localhost:5000/api/updatePassword/${id}`, {\n        newPassword\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response);\n      alert(\"Password Updated SuccessFully\");\n      navigate('/profile');\n    } catch (error) {\n      console.error(error);\n      setErrorMessage(\"An error occurred. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"newPassword\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        placeholder: \"Enter Your New Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        placeholder: \"Confirm your New Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(ChangePassword, \"/tZ6IkwWCpRpZhaBwk6Ppx3tRxk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ChangePassword;\nexport default ChangePassword;\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","ChangePassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","token","localStorage","getItem","navigate","id","handleSubmit","e","preventDefault","response","put","headers","Authorization","console","log","alert","error","children","onSubmit","name","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["C:/Users/Selva/OneDrive/Desktop/New folder (2)/client/src/components/ChangePassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction ChangePassword() {\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const navigate = useNavigate();\r\n\r\n    const { id } = useParams(); // Extract `id` from the URL\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Password confirmation check\r\n        if (newPassword !== confirmPassword) {\r\n            setErrorMessage(\"Passwords do not match\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.put(\r\n                `http://localhost:5000/api/updatePassword/${id}`,\r\n                { newPassword },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                }\r\n            );\r\n\r\n            console.log(response);\r\n            alert(\"Password Updated SuccessFully\");\r\n            navigate('/profile')\r\n        } catch (error) {\r\n            console.error(error);\r\n            setErrorMessage(\"An error occurred. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    name=\"newPassword\"\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                    placeholder=\"Enter Your New Password\"\r\n                    required\r\n                />\r\n                <input\r\n                    name=\"confirmPassword\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    placeholder=\"Confirm your New Password\"\r\n                    required\r\n                />\r\n\r\n                {errorMessage && <p>{errorMessage}</p>}\r\n                <button type=\"submit\">Update</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChangePassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}